---
import config from '@config';
import WeatherIcon from './WeatherIcon.svelte';

const apiKey = import.meta.env.PUBLIC_WEATHER_API_KEY;
let weatherData = null;
let weatherCode = null;
let temperature = null;
let error = null;

if (apiKey && apiKey !== 'yourkeyhere') {
  try {
    const { lat, long } = config.weather.coordinates;
    const units = config.weather.units;

    const response = await fetch(
      `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=${apiKey}&units=${units}`,
    );

    if (!response.ok) {
      throw new Error(`Weather API responded with status: ${response.status}`);
    }

    weatherData = await response.json();

    if (weatherData && weatherData.weather && weatherData.weather[0]) {
      weatherCode = weatherData.weather[0].icon;
      temperature = Math.round(weatherData.main.temp);
    }
  } catch (e) {
    console.error('Error fetching weather:', e);
    error = (e as Error).message;
  }
}
---

<div class="weather-container flex items-center justify-center gap-2 rounded-md p-3">
  {
    error ? (
      <div class="text-red-400">Error: {error}</div>
    ) : !apiKey || apiKey === 'yourkeyhere' ? (
      <div class="text-center text-amber-400">Weather API key not configured</div>
    ) : weatherData ? (
      <>
        <div class="weather-icon">
          <WeatherIcon weatherCode={weatherCode} class="size-8" client:load />
        </div>
        <div class="weather-info">
          <span class="temperature text-4xl font-bold">
            {`${temperature}${config.weather.units === 'imperial' ? '°F' : config.weather.units === 'metric' ? '°C' : 'K'}`}
          </span>
          <span class="weather-description ml-1 text-4xl">{weatherData.weather[0].main}</span>
        </div>
      </>
    ) : (
      <div class="loading">Loading weather...</div>
    )
  }
</div>
